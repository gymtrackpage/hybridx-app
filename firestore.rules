rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Users can only read/update their own profile.
    // Access is granted if they are an admin, have an active sub, or are in their trial period.
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId &&
        (get(/databases/$(database)/documents/users/$(userId)).data.isAdmin == true ||
         get(/databases/$(database)/documents/users/$(userId)).data.subscriptionStatus in ['active', 'trial']);
      allow create: if request.auth != null;
    }
    
    // Any authenticated user with a valid subscription status can read programs.
    match /programs/{programId} {
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.subscriptionStatus in ['active', 'trial']);
      allow write: if false; 
    }
    
    // Users can only manage their own workout sessions, provided they have access.
    match /workoutSessions/{sessionId} {
      allow read, update: if request.auth != null && resource.data.userId == request.auth.uid &&
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.subscriptionStatus in ['active', 'trial']);
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
  }
}
